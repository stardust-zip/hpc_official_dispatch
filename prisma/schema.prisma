// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ENUMs for declarative, type-safe options
enum DocumentType {
  INCOMING
  OUTGOING
}

enum SecurityLevel {
  PUBLIC
  INTERNAL
  CONFIDENTIAL
  SECRET
}

enum DocumentStatus {
  DRAFT // The document has been created but not submitted
  PENDING_APPROVAL // Submitted and waiting for a decision
  APPROVED // Approved by the assignee
  REJECTED // Rejected by the assignee
  ISSUED // Finalized and officially sent
}

// Represents an official dispatch or document
model Document {
  id             String        @id @default(cuid())
  serialNumber   String        @unique @map("serial_number")
  title          String
  contentSummary String        @map("content_summary")
  type           DocumentType
  securityLevel  SecurityLevel @default(INTERNAL) @map("security_level")

  authorId   String  @map("author_id")
  assigneeId String? @map("assignee_id")

  // Add the new status field
  status DocumentStatus @default(DRAFT)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  workflowHistory WorkflowStep[]

  @@map("documents")
}

// Represents a single step in a document's lifecycle
model WorkflowStep {
  id         String   @id @default(cuid())
  document   Document @relation(fields: [documentId], references: [id])
  documentId String   @map("document_id")

  // The user from hpc_user who performed this action
  actorId   String   @map("actor_id")
  action    String // e.g., "CREATE", "SUBMIT_FOR_APPROVAL", "APPROVE", "REJECT"
  comments  String?
  timestamp DateTime @default(now())

  @@map("workflow_steps")
}
